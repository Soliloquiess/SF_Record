package BOJ;


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class BOJ_1261_알고스팟 {
	static BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
	static StringBuilder output = new StringBuilder();
	static StringTokenizer tokens;

	static int C,R;	//col,row
	static char [][] map;
	

	
	public static void main(String[] args) throws IOException {
		input = new BufferedReader(new StringReader(src));
		C= Integer.parseInt(tokens.nextToken());
		R= Integer.parseInt(tokens.nextToken());
		map = new char[R][];
		for(int r = 0; r<R; r++) {
			map[r] = input.readLine().toCharArray();
		}
		//입력완료
		System.out.println(bfs());
		
	}
	
	static int bfs() {
		boolean [][]visited = new boolean[R][C];
		//bfs에는 큐 쓰는데 우선순위 줘서 쓰니까 우선순위 큐 사용
		//pq에선 반드시 비교 할 수 있어야 , 그래서 comparable 인터페이스 구현해줘야한다.
		return -1;
	}
	
	static class Point{
		int r,c,broke;

		public Point(int r, int c, int broke) {
			super();
			this.r = r;
			this.c = c;
			this.broke = broke;
		}

		@Override
		public String toString() {
			return "Point [r=" + r + ", c=" + c + ", broke=" + broke + "]";
		}
	}
	
	
	private static String src = "2\r\n" +
			"5 3\r\n" +
			"D*S\r\n" +
			".X.\r\n" +
			".X.\r\n" +
			".X.\r\n" +
			"...\r\n" +
			"5 3\r\n" +
			"D*S\r\n" +
			"...\r\n" +
			".X.\r\n" +
			".X.\r\n" +
			"...";
}

