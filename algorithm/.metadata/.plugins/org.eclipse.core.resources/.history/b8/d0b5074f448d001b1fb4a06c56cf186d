package com.ssafy;

import java.util.Scanner;

/*
 * 모든 정점 간의 최소 비용
 * 음수도 허용,
 * for 3개 사용
 * for - 경유지
 * 		for - 출발지
 * 			for - 도착지
 */
public class FloydTest {
		static final int INF =999;
		static int N, adjMatrix[][];
		static String src= "5\r\n"+
				
				"0 4 2 5 0\r\n"+
				"0 0 1 0 4\r\n"+
				"1 3 0 1 2\r\n"+
				"-2 0 0 0 2\r\n"+
				"0 -3 3 1 0";
	

	
	public static void main(String[] args) {
		Scanner sc = new Scanner (src);
		N = sc.nextInt();
		adjMatrix = new int[N][N];
		
		for(int i=0;i<N;i++) {
			for(int j =0; j<N;j++) {
				adjMatrix[i][j] = sc.nextInt();
				
				if(i!=j && adjMatrix[i][j] ==0) {	//인접해 있지 않은 경우
					//i랑 j가 같지 않고 i에서j로 가는 값이 0이면 갈수 가 없다.(i와 j가 같으면 자기자신한테 오는거)
					//자기자신한테 오는 정보는 아닌데 그 값이 0이라면 서로 인접해있지 않다.
					adjMatrix[i][j]= INF;//음수도 있어서 최소비용이 0이되는 경우도 있기에 다른 값을 넣어줬다.
				}
			}
				
		}
		System.out.println("입력값");
		print();
		
		//최소비용 계산하러 감.
	}
	private static void print() {
		for(int i =0; i<N; i++) {
			for(int j =0; j<N; j++) {
				System.out.print(adjMatrix[i][j] + "\t");
			}
			System.out.println();
		}
		System.out.println("----------");
	}
}

//0으로 들어오는건 자기 자신한테 오는 거.
