package com.ssafy;

import java.util.Scanner;

public class DP_KnapsackTest {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int N = sc.nextInt();
		int W = sc.nextInt();
		
		int [] weights = new int[N+1];//물건의 무게정보
		int [] profits = new int[N+1];//물건의 가치 정보
		int [][]D = new int[N+1][W+1];//해당 물건까지 고려하여 해당 무게를 만들 떄의 최대 가치
		
		for(int i =1; i<=N;i++) {
			weights[i] = sc.nextInt();
			profits[i] = sc.nextInt();
			
		}
		for(int i =1; i<=N;i++) {	//첫 물건부터 고려
			for(int w = 1; w<=W;W++)// 무게 1부터 고려
			{
				if(weights[i]<=w) {//가방에 넣을 수 있는 상황
					//넣을까
					Math.max(D[i-1][w-weights[i]]+profits[i],D[i-1][w]);	//자신이 들어가면서 생기는 가치.
					//말까
					D[i][w] = D[i-1][w];
					
				}else {	//가방에 넣지 못하는 상황
					D[i][w] = D[i-1][w];
					
				}
			}
			
		}
		
	}
}
